generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_SHADOW_URL")
}

model Order {
  id            Int       @id @default(autoincrement())
  name          String?
  surname       String?
  email         String?
  phone         String?
  age           Int?
  course        String?
  course_format String?
  course_type   String?
  status        String?
  sum           Int?
  alreadyPaid   Int?
  group         Group?    @relation(fields: [groupId], references: [id])
  groupId       Int?
  created_at    DateTime?
  utm           String?
  msg           String?
  manager       User?     @relation("ManagerToOrder", fields: [managerId], references: [id])
  managerId     Int?
  Comment       Comment[]

  @@map("orders")
}

model Group {
  id     Int     @id @default(autoincrement())
  name   String? @unique
  orders Order[]

  @@map("groups")
}

enum Role {
  ADMIN
  MANAGER
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String?
  role            Role?
  firstName       String?
  lastName        String?
  phone           String?
  isActive        Boolean   @default(false)
  lastLogin       DateTime?
  activationToken String?   @unique
  managedOrders   Order[]   @relation("ManagerToOrder")
  Comment         Comment[]

  @@map("users")
}

model Comment {
  id        Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  @@map("comments")
}
